// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_scango.Domain.Entities;

#nullable disable

namespace Api_ScanGo.Migrations
{
    [DbContext(typeof(ScanGoDbContext))]
    partial class ScanGoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_scango.Domain.Entities.Administrador", b =>
                {
                    b.Property<int>("IdAdministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_administrador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdministrador"));

                    b.Property<string>("Contraseña")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<int?>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("id_establecimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdAdministrador")
                        .HasName("PK__Administ__0FE822AA0ABFEC6D");

                    b.HasIndex("IdEstablecimiento");

                    b.ToTable("Administrador", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_carrito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrito"));

                    b.Property<int?>("TotalArticulos")
                        .HasColumnType("int")
                        .HasColumnName("total_articulos");

                    b.Property<decimal?>("TotalPagar")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_pagar");

                    b.HasKey("IdCarrito")
                        .HasName("PK__Carrito__83A2AD9CBE547550");

                    b.ToTable("Carrito", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Cliente", b =>
                {
                    b.Property<string>("NumeroTelefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("numero_telefono");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Contrasena")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo");

                    b.Property<int?>("IdCarrito")
                        .HasColumnType("int")
                        .HasColumnName("id_carrito");

                    b.Property<int?>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("id_establecimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("NumeroTelefono")
                        .HasName("PK__Cliente__E2891F4519CDE59D");

                    b.HasIndex("IdCarrito");

                    b.HasIndex("IdEstablecimiento");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("date")
                        .HasColumnName("fecha_compra");

                    b.Property<int?>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("id_establecimiento");

                    b.Property<string>("NumeroTelefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("numero_telefono");

                    b.Property<decimal?>("TotalPagado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_pagado");

                    b.Property<int?>("TotalProductos")
                        .HasColumnType("int")
                        .HasColumnName("total_productos");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__C4BAA6040B015E15");

                    b.HasIndex("IdEstablecimiento");

                    b.HasIndex("NumeroTelefono");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.CompraDetalles", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_compra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_producto");

                    b.Property<string>("NombreProducto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_producto");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__CompraDe__BD16E279EE9D9862");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("CompraDetalles", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Descuento", b =>
                {
                    b.Property<int>("IdDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_descuento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDescuento"));

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("porcentaje");

                    b.HasKey("IdDescuento")
                        .HasName("PK__Descuent__4F9A1A80336A33DF");

                    b.ToTable("Descuento", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_producto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_unitario");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__5B265D471211943C");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Establecimiento", b =>
                {
                    b.Property<int>("IdEstablecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_establecimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstablecimiento"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion");

                    b.Property<int?>("IdInventario")
                        .HasColumnType("int")
                        .HasColumnName("id_inventario");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagen");

                    b.Property<decimal?>("Latitud")
                        .HasColumnType("decimal(10, 6)")
                        .HasColumnName("latitud");

                    b.Property<decimal?>("Longitud")
                        .HasColumnType("decimal(10, 6)")
                        .HasColumnName("longitud");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdEstablecimiento")
                        .HasName("PK__Establec__AFEAEA2088B7779A");

                    b.HasIndex("IdInventario");

                    b.ToTable("Establecimiento", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_inventario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInventario"));

                    b.HasKey("IdInventario")
                        .HasName("PK__Inventar__013AEB517298FE6E");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Producto", b =>
                {
                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_producto");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdDescuento")
                        .HasColumnType("int")
                        .HasColumnName("id_descuento");

                    b.Property<int?>("IdTipoProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_producto");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__FF341C0D99FE9EB9");

                    b.HasIndex("IdDescuento");

                    b.HasIndex("IdTipoProducto");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.ProductoInventario", b =>
                {
                    b.Property<int>("IdProductoInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto_inventario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoInventario"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdInventario")
                        .HasColumnType("int")
                        .HasColumnName("id_inventario");

                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_producto");

                    b.HasKey("IdProductoInventario")
                        .HasName("PK__Producto__7362DAA55F93E78C");

                    b.HasIndex("IdInventario");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductoInventario", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.ProductosEnCarrito", b =>
                {
                    b.Property<int>("IdProductoEncarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_productoEncarrito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoEncarrito"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCarrito")
                        .HasColumnType("int")
                        .HasColumnName("id_carrito");

                    b.Property<string>("IdProducto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_producto");

                    b.Property<string>("NombreProducto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_producto");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdProductoEncarrito")
                        .HasName("PK__Producto__65992ACE0AA2451B");

                    b.HasIndex("IdCarrito");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductosEnCarrito", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.TipoProducto", b =>
                {
                    b.Property<int>("IdTipoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoProducto"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("PrecioPorKilo")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_por_kilo");

                    b.HasKey("IdTipoProducto")
                        .HasName("PK__Tipo_Pro__F5E0BFB83B092371");

                    b.ToTable("Tipo_Producto", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime?>("FechaVenta")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_venta");

                    b.Property<int?>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("id_establecimiento");

                    b.Property<string>("IdTransaccion")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("idTransaccion");

                    b.Property<decimal?>("TotalPagado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_pagado");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__459533BF3B9DC6DA");

                    b.HasIndex("IdEstablecimiento");

                    b.ToTable("Venta", (string)null);
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Administrador", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("Administrador")
                        .HasForeignKey("IdEstablecimiento")
                        .HasConstraintName("FK__Administr__id_es__59063A47");

                    b.Navigation("IdEstablecimientoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Carrito", "IdCarritoNavigation")
                        .WithMany("Cliente")
                        .HasForeignKey("IdCarrito")
                        .HasConstraintName("FK__Cliente__id_carr__4D94879B");

                    b.HasOne("api_scango.Domain.Entities.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("Cliente")
                        .HasForeignKey("IdEstablecimiento")
                        .HasConstraintName("FK__Cliente__id_esta__4E88ABD4");

                    b.Navigation("IdCarritoNavigation");

                    b.Navigation("IdEstablecimientoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Compra", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("Compra")
                        .HasForeignKey("IdEstablecimiento")
                        .HasConstraintName("FK__Compra__id_estab__52593CB8");

                    b.HasOne("api_scango.Domain.Entities.Cliente", "NumeroTelefonoNavigation")
                        .WithMany("Compra")
                        .HasForeignKey("NumeroTelefono")
                        .HasConstraintName("FK__Compra__numero_t__5165187F");

                    b.Navigation("IdEstablecimientoNavigation");

                    b.Navigation("NumeroTelefonoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.CompraDetalles", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Compra", "IdCompraNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK__CompraDet__id_co__5535A963");

                    b.HasOne("api_scango.Domain.Entities.Producto", "IdProductoNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__CompraDet__id_pr__5629CD9C");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.DetalleVenta", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DetalleVe__id_pr__5FB337D6");

                    b.HasOne("api_scango.Domain.Entities.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__id_ve__5EBF139D");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Establecimiento", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Inventario", "IdInventarioNavigation")
                        .WithMany("Establecimiento")
                        .HasForeignKey("IdInventario")
                        .HasConstraintName("FK__Estableci__id_in__44FF419A");

                    b.Navigation("IdInventarioNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Producto", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Descuento", "IdDescuentoNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdDescuento")
                        .HasConstraintName("FK__Producto__id_des__3C69FB99");

                    b.HasOne("api_scango.Domain.Entities.TipoProducto", "IdTipoProductoNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdTipoProducto")
                        .HasConstraintName("FK__Producto__id_tip__3B75D760");

                    b.Navigation("IdDescuentoNavigation");

                    b.Navigation("IdTipoProductoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.ProductoInventario", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Inventario", "IdInventarioNavigation")
                        .WithMany("ProductoInventario")
                        .HasForeignKey("IdInventario")
                        .HasConstraintName("FK__ProductoI__id_in__4222D4EF");

                    b.HasOne("api_scango.Domain.Entities.Producto", "IdProductoNavigation")
                        .WithMany("ProductoInventario")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__ProductoI__id_pr__412EB0B6");

                    b.Navigation("IdInventarioNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.ProductosEnCarrito", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Carrito", "IdCarritoNavigation")
                        .WithMany("ProductosEnCarrito")
                        .HasForeignKey("IdCarrito")
                        .HasConstraintName("FK__Productos__id_ca__4AB81AF0");

                    b.HasOne("api_scango.Domain.Entities.Producto", "IdProductoNavigation")
                        .WithMany("ProductosEnCarrito")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__Productos__id_pr__49C3F6B7");

                    b.Navigation("IdCarritoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Venta", b =>
                {
                    b.HasOne("api_scango.Domain.Entities.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdEstablecimiento")
                        .HasConstraintName("FK__Venta__id_establ__5BE2A6F2");

                    b.Navigation("IdEstablecimientoNavigation");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Carrito", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("ProductosEnCarrito");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Compra");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Compra", b =>
                {
                    b.Navigation("CompraDetalles");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Descuento", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Establecimiento", b =>
                {
                    b.Navigation("Administrador");

                    b.Navigation("Cliente");

                    b.Navigation("Compra");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Inventario", b =>
                {
                    b.Navigation("Establecimiento");

                    b.Navigation("ProductoInventario");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Producto", b =>
                {
                    b.Navigation("CompraDetalles");

                    b.Navigation("DetalleVenta");

                    b.Navigation("ProductoInventario");

                    b.Navigation("ProductosEnCarrito");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.TipoProducto", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("api_scango.Domain.Entities.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
